# Name of the GitHub Actions workflow
name: CI

# Trigger the workflow on push and pull request events
on:
  push:
  pull_request:

jobs:
  run-tests:
    # Define a matrix strategy to run tests on multiple OS and Python versions
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.11, 3.12]

    # Job name
    name: Test
    # Run the job on the OS specified in the matrix
    runs-on: ${{ matrix.os }}

    steps:
      # Step to checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step to set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step to install dependencies on Linux
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y portaudio19-dev

      # Step to install dependencies on macOS
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install portaudio

      # Step to install dependencies on Windows
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          Invoke-WebRequest -Uri "http://files.portaudio.com/archives/pa_stable_v190700_20210406.tgz" -OutFile "portaudio.tgz"
          tar -xvzf portaudio.tgz
          cd portaudio
          cmake -G "MinGW Makefiles" .
          mingw32-make
          mingw32-make install
        shell: powershell

      # Step to install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      # Step to ensure the logs directory exists
      - name: Ensure logs directory exists
        run: mkdir -p logs

      # Step to run the tests using pytest
      - name: Run Tests
        run: |
          echo "PYTHONPATH=$PYTHONPATH"
          pytest
        env:
          # Set the PYTHONPATH environment variable for all OS
          PYTHONPATH: ${{ github.workspace }}

